language: c
sudo: required

env:
  matrix:
  - TARGET_DIST=ubuntu TARGET_VERSION=1604
  - TARGET_DIST=ubuntu TARGET_VERSION=1804
  
script:
 - echo $TARGET_DIST $TARGET_VERSION
 - docker build -t $TARGET_DIST-$TARGET_VERSION -f docker/Dockerfile-$TARGET_DIST-$TARGET_VERSION .
 - export CONTAINER_NAME=$TARGET_DIST-$TARGET_VERSION
 - echo $CONTAINER_NAME
 - docker run -ti -d --name $CONTAINER_NAME -v $TRAVIS_BUILD_DIR/tmp_release:/release_tmp $CONTAINER_NAME
 - docker exec -ti $CONTAINER_NAME cat /etc/os-release
 

 #- docker build -t test/test .
 #- docker run -ti -d -v $TRAVIS_BUILD_DIR:/work --name integ test/test
  #- docker exec -ti integ gcc -o work/release_app work/tmp/main.c
 #- ./release_app
 

#after_success:
#  - openssl aes-256-cbc -K $encrypted_31d12b5c5a08_key -iv $encrypted_31d12b5c5a08_iv -in id_rsa.enc -out ~\/.ssh/id_rsa -d
#  - openssl aes-256-cbc -K $encrypted_31d12b5c5a08_key -iv $encrypted_31d12b5c5a08_iv -in id_rsa.enc -out id_rsa -d
#  - cp id_rsa ~/.ssh/id_rsa
#  - chmod 600 ~/.ssh/id_rsa
#  - echo -e "Host github.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
#  - git config --global user.email "example@example.com"
#  - git config --global user.name "tonboAkinori"
#  - git clone git@github.com:rtcci/work2.git
#  - cp release_app work2
#  - cd work2
#  - git add -A
#  - git commit -m "release test"
#  - git push origin master
#  - git push git@github.com:rtcci/work2.git

#jobs:
#  include:
#    - stage: deploy
#      script: echo "Deploy"